# TEAM-3-FINAL-PROJECT-
import cv2

def scan_document(image_path):
    # Read the image
    image = cv2.imread(image_path)

    # Convert the image to grayscale
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

    # Apply GaussianBlur to reduce noise and help with contour detection
    blurred = cv2.GaussianBlur(gray, (5, 5), 0)

    # Use Canny edge detection to find edges in the image
    edges = cv2.Canny(blurred, 50, 150)

    # Find contours in the edged image
    contours, _ = cv2.findContours(edges, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    # Sort contours by area and keep the largest one
    contours = sorted(contours, key=cv2.contourArea, reverse=True)[:1]

    # Create a mask and draw the largest contour on it
    mask = image.copy()
    cv2.drawContours(mask, contours, -1, (0, 255, 0), 2)

    # Mask the original image
    result = cv2.bitwise_and(image, mask)

    # Display the result
    cv2.imshow("Scanned Document", result)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

# Replace 'path/to/your/image.jpg' with the actual path to your document image
scan_document('path/to/your/image.jpg')
    
